print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "https://nextcloud.data.magic-nexus.eu/remote.php/webdav/NIS_beta/CS_format_examples/08_caso_energia_eu_new_commands.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
py_config()
.libPaths()
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000//nis_api")
fname <- "DATOSGC_NIS3ToNIS.xlsx"
c$login("test_user")
fname <- "DATOSGC_NIS3ToNIS.xlsx"
c$login("test_user")
c <- nexinfosys$NISClient("http://0.0.0.0:5000//nis_api")
c$login("test_user")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "DATOSGC_NIS3ToNIS.xlsx"
c$login("test_user")
c$open_session()
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
fname <- "DatosGC_NIS3ToNIS.xlsx"
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
r <- c$query_available_datasets()
r
ds <- c$query_datasets(c(tuple("low_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
ds
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
setwd("~/Documentos/Shiny/Shiny-NIS2")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("DT","excelR","ggplot2")
install.packages("DT")
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "DatosGC_NIS3ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
r
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
class(df)
runApp()
runApp()
install.packages("ggplot")รง
install.packages("ggplot")
R --version
install.packages("ggplot")
shiny::runApp()
runApp()
runApp()
install.packages("edirData")
install.packages("editData")
help(editData)
runApp()
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "DatosGC_NIS3ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
r
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
runApp()
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "DatosGC_NIS3ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
r
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
df<-subset(df,-c(Conflict_Partof,Conflict_Itype,Computed,Expression))
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
View(df)
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "DatosGC_NIS3ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
r
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
ds
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "DatosGC_NIS3ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
setwd("~/Documentos/Shiny/Shiny-NIS2")
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
View(df)
runApp()
runApp()
c$close_session()
c$logout()
runApp()
c$close_session()
c$logout()
runApp()
c$close_session()
c$logout()
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
df$Value
as.numeric(df$Value)
View(df)
df$Value[1]
df$Value[1]+1
df$Value[9]
df$Value[9]+1
runApp()
runApp()
?as.numeric
?as.numeric_version
as.numeric(gsub(",", ".", gsub("\\.", "", df$Value)))
??str_replace_all
??str_replace_all
library(stringr)
??str_replace_all
lapply(df$Value,str_replace_all,pattern = ",",replacement = ".")
lapply(df$Value,str_replace ,pattern = ",",replacement = ".")
c$close_session()
c$logout()
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
lapply(df$Value,str_replace ,pattern = ",",replacement = ".")
df$Value2<-lapply(df$Value,str_replace ,pattern = ",",replacement = ".")
View(df)
df$Value2[10]
df$Value2[10]+1
df$Value2<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
df$Value2[10]+1
df$Value2[10]
df$Value2[10]+1
runApp()
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
c$close_session()
c$logout()
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
c$close_session()
c$logout()
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
View(df)
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
data$Period<-as.numeric(data$Period)
Scenarios <- as.vector(unique(data$Scenario))
Periods<- as.vector(unique(data$Period))
Processors<- as.vector(unique(data$Processor))
Interfaces<- as.vector(unique(data$Interface))
Scopes<- as.vector(unique(data$Scope))
Level <-as.vector(unique(data$Level))
Systems<- as.vector (unique(data$System))
Subsystems<-as.vector(unique(data$Subsystem))
Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
FlowInterfaces<- as.vector(unique(Flow$Interface))
FundInterfaces <- as.vector(unique(Fund$Interface))
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
setwd("~/Documentos/Shiny/Shiny-NIS2")
library("reticulate")
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
fname <- "Netherlandsv1ToNIS.xlsx"
c$login("test_user")
print("Logged in")
c$open_session()
print("Session opened")
n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
print(paste("N worksheets: ",n))
r <- c$submit()
print("Returned from submit")
r <- c$query_available_datasets()
ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
df <- py_to_r(ds[[1]][[3]])
df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
data$Period<-as.numeric(data$Period)
Scenarios <- as.vector(unique(data$Scenario))
Periods<- as.vector(unique(data$Period))
Processors<- as.vector(unique(data$Processor))
Interfaces<- as.vector(unique(data$Interface))
Scopes<- as.vector(unique(data$Scope))
Level <-as.vector(unique(data$Level))
Systems<- as.vector (unique(data$System))
Subsystems<-as.vector(unique(data$Subsystem))
Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
FlowInterfaces<- as.vector(unique(Flow$Interface))
FundInterfaces <- as.vector(unique(Fund$Interface))
data<-df
data$Period<-as.numeric(data$Period)
Scenarios <- as.vector(unique(data$Scenario))
Periods<- as.vector(unique(data$Period))
Processors<- as.vector(unique(data$Processor))
Interfaces<- as.vector(unique(data$Interface))
Scopes<- as.vector(unique(data$Scope))
Level <-as.vector(unique(data$Level))
Systems<- as.vector (unique(data$System))
Subsystems<-as.vector(unique(data$Subsystem))
Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
FlowInterfaces<- as.vector(unique(Flow$Interface))
FundInterfaces <- as.vector(unique(Fund$Interface))
df <- filter(data,data$Scenario == input$Scenario[1] & data$Period == input$Period[1]  & data$Interface == input$Interface[1], data$Scope == input$Scope[1])
df <- filter(data,data$Scenario == input$Scenario[1])
df <- filter(data,data$Scenario == Scenario[1] & data$Period == Period[1]  & data$Interface == Interface[1], data$Scope == Scope[1])
df$per<-round(df$Value/sum(df$Value)*100, digits = 3)
df$names_per <-paste(df$Processor,df$per,"%", sep = " ")
plt <- ggplot (df, aes( x = "" ,  y = Value, fill = names_per)) + geom_bar(width = 1, stat = "identity")
pie <- plt + coord_polar("y", start=0)
pie
runApp()
c$close_session()
c$logout()
runApp()
runApp()
View(datos)
c$close_session()
c$logout()
runApp()
runApp()
runApp()
dff
dff$per<-round(dff$Value/sum(dff$Value)*100, digits = 3)
dff$names_per <-paste(dff$Processor,dff$per,"%", sep = " ")
plt <- ggplot (dff, aes( x = "" ,  y = Value, fill = names_per)) + geom_bar(width = 1, stat = "identity")
pie <- plt + coord_polar("y", start=0)
pie
shiny::runApp()
runApp()
data<-datos
data$Period<-as.numeric(data$Period)
Scenarios <- as.vector(unique(data$Scenario))
Periods<- as.vector(unique(data$Period))
Processors<- as.vector(unique(data$Processor))
Interfaces<- as.vector(unique(data$Interface))
Scopes<- as.vector(unique(data$Scope))
Level <-as.vector(unique(data$Level))
Systems<- as.vector (unique(data$System))
Subsystems<-as.vector(unique(data$Subsystem))
Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
FlowInterfaces<- as.vector(unique(Flow$Interface))
FundInterfaces <- as.vector(unique(Fund$Interface))
Periods
class(Periods)
df <- filter(data,data$Scenario == Scenario[1] & data$Period == Period[1]  & data$Interface == Interface[1], data$Scope == Scope[1])
df$per<-round(df$Value/sum(df$Value)*100, digits = 3)
df$names_per <-paste(df$Processor,df$per,"%", sep = " ")
plt <- ggplot (df, aes( x = "" ,  y = Value, fill = names_per)) + geom_bar(width = 1, stat = "identity")
pie <- plt + coord_polar("y", start=0)
pie
shiny::runApp()
runApp()
install.packages(c("backports", "BH", "biclust", "broom", "callr", "checkmate", "cli", "curl", "DBI", "digest", "dplyr", "DT", "ellipsis", "fansi", "farver", "feather", "ggplot2", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "leaflet", "markdown", "mime", "modelr", "pillar", "pkgconfig", "plyr", "prettyunits", "processx", "promises", "purrr", "R6", "raster", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "rvest", "selectr", "shiny", "sp", "stringi", "sys", "testthat", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "XML", "xml2", "yaml"))
shiny::runApp()
??use_virtualenv
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
conda_list()
use_condaenv("anaconda3", required = TRUE)
nexinfosys <- import("nexinfosys")
nexinfosys <- import("nexinfosys")
conda_list()
runApp()
shiny::runApp()
nexinfosys <- import("nexinfosys")
runApp()
shiny::runApp()
rm(list = ls())
setwd("~/Documentos/Shiny/Shiny-NIS2")
library(dplyr)
library(ggplot2)
library(stringr)
library(rlist)
library(dplyr)
library(tidyr)
library("readxl")
library("collapsibleTree")
library(data.table)
library(excelR)
library("DT")
library(flexdashboard)
library("reticulate")
library(stringr)
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
use_condaenv("anaconda3", required = TRUE)
conda_list()
nexinfosys <- import("nexinfosys")
rm(list = ls())
setwd("~/Documentos/Shiny/Shiny-NIS2")
library(dplyr)
library(ggplot2)
library(stringr)
library(rlist)
library(dplyr)
library(tidyr)
library("readxl")
library("collapsibleTree")
library(data.table)
library(excelR)
library("DT")
library(flexdashboard)
library("reticulate")
library(stringr)
reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
use_condaenv("anaconda3", required = TRUE)
conda_list()
nexinfosys <- import("nexinfosys")
c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
