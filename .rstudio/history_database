0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "https://nextcloud.data.magic-nexus.eu/remote.php/webdav/NIS_beta/CS_format_examples/08_caso_energia_eu_new_commands.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:py_config()
0:.libPaths()
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000//nis_api")
0:fname <- "DATOSGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:fname <- "DATOSGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000//nis_api")
0:c$login("test_user")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "DATOSGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:c$open_session()
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:fname <- "DatosGC_NIS3ToNIS.xlsx"
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:r <- c$query_available_datasets()
0:r
0:ds <- c$query_datasets(c(tuple("low_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:ds
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:shiny::runApp()
0:runApp()
0:runApp()
0:runApp()
0:runApp()
0:install.packages("DT","excelR","ggplot2")
0:install.packages("DT")
0:runApp()
0:runApp()
0:library(shiny)
0:runApp()
0:runApp()
0:runApp()
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "DatosGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:r
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:class(df)
0:runApp()
0:runApp()
0:install.packages("ggplot")รง
0:install.packages("ggplot")
0:R --version
0:install.packages("ggplot")
0:shiny::runApp()
0:runApp()
0:runApp()
0:install.packages("edirData")
0:install.packages("editData")
0:help(editData)
0:runApp()
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "DatosGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:r
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:runApp()
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "DatosGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:r
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:df<-subset(df,-c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:View(df)
0:runApp()
0:runApp()
0:shiny::runApp()
0:runApp()
0:shiny::runApp()
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "DatosGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:r
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:ds
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "DatosGC_NIS3ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:View(df)
0:runApp()
0:runApp()
0:c$close_session()
0:c$logout()
0:runApp()
0:c$close_session()
0:c$logout()
0:runApp()
0:c$close_session()
0:c$logout()
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:df$Value
0:as.numeric(df$Value)
0:View(df)
0:df$Value[1]
0:df$Value[1]+1
0:df$Value[9]
0:df$Value[9]+1
0:runApp()
0:runApp()
0:?as.numeric
0:?as.numeric_version
0:as.numeric(gsub(",", ".", gsub("\\.", "", df$Value)))
0:??str_replace_all
0:??str_replace_all
0:library(stringr)
0:??str_replace_all
0:lapply(df$Value,str_replace_all,pattern = ",",replacement = ".")
0:lapply(df$Value,str_replace ,pattern = ",",replacement = ".")
0:c$close_session()
0:c$logout()
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:lapply(df$Value,str_replace ,pattern = ",",replacement = ".")
0:df$Value2<-lapply(df$Value,str_replace ,pattern = ",",replacement = ".")
0:View(df)
0:df$Value2[10]
0:df$Value2[10]+1
0:df$Value2<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
0:df$Value2[10]+1
0:df$Value2[10]
0:df$Value2[10]+1
0:runApp()
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
0:c$close_session()
0:c$logout()
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
0:c$close_session()
0:c$logout()
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:View(df)
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
0:data$Period<-as.numeric(data$Period)
0:Scenarios <- as.vector(unique(data$Scenario))
0:Periods<- as.vector(unique(data$Period))
0:Processors<- as.vector(unique(data$Processor))
0:Interfaces<- as.vector(unique(data$Interface))
0:Scopes<- as.vector(unique(data$Scope))
0:Level <-as.vector(unique(data$Level))
0:Systems<- as.vector (unique(data$System))
0:Subsystems<-as.vector(unique(data$Subsystem))
0:Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
0:Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
0:FlowInterfaces<- as.vector(unique(Flow$Interface))
0:FundInterfaces <- as.vector(unique(Fund$Interface))
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library("reticulate")
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
0:fname <- "Netherlandsv1ToNIS.xlsx"
0:c$login("test_user")
0:print("Logged in")
0:c$open_session()
0:print("Session opened")
0:n <- c$load_workbook(fname, "NIS_agent", "NIS_agent@1")
0:print(paste("N worksheets: ",n))
0:r <- c$submit()
0:print("Returned from submit")
0:r <- c$query_available_datasets()
0:ds <- c$query_datasets(c(tuple("flow_graph_solution", "csv", "dataframe")))
0:df <- py_to_r(ds[[1]][[3]])
0:df<-subset(df,select = -c(Conflict_Partof,Conflict_Itype,Computed,Expression))
0:df$Value<-as.numeric(lapply(df$Value,str_replace ,pattern = ",",replacement = "."))
0:data$Period<-as.numeric(data$Period)
0:Scenarios <- as.vector(unique(data$Scenario))
0:Periods<- as.vector(unique(data$Period))
0:Processors<- as.vector(unique(data$Processor))
0:Interfaces<- as.vector(unique(data$Interface))
0:Scopes<- as.vector(unique(data$Scope))
0:Level <-as.vector(unique(data$Level))
0:Systems<- as.vector (unique(data$System))
0:Subsystems<-as.vector(unique(data$Subsystem))
0:Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
0:Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
0:FlowInterfaces<- as.vector(unique(Flow$Interface))
0:FundInterfaces <- as.vector(unique(Fund$Interface))
0:data<-df
0:data$Period<-as.numeric(data$Period)
0:Scenarios <- as.vector(unique(data$Scenario))
0:Periods<- as.vector(unique(data$Period))
0:Processors<- as.vector(unique(data$Processor))
0:Interfaces<- as.vector(unique(data$Interface))
0:Scopes<- as.vector(unique(data$Scope))
0:Level <-as.vector(unique(data$Level))
0:Systems<- as.vector (unique(data$System))
0:Subsystems<-as.vector(unique(data$Subsystem))
0:Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
0:Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
0:FlowInterfaces<- as.vector(unique(Flow$Interface))
0:FundInterfaces <- as.vector(unique(Fund$Interface))
0:df <- filter(data,data$Scenario == input$Scenario[1] & data$Period == input$Period[1]  & data$Interface == input$Interface[1], data$Scope == input$Scope[1])
0:df <- filter(data,data$Scenario == input$Scenario[1])
0:df <- filter(data,data$Scenario == Scenario[1] & data$Period == Period[1]  & data$Interface == Interface[1], data$Scope == Scope[1])
0:df$per<-round(df$Value/sum(df$Value)*100, digits = 3)
0:df$names_per <-paste(df$Processor,df$per,"%", sep = " ")
0:plt <- ggplot (df, aes( x = "" ,  y = Value, fill = names_per)) + geom_bar(width = 1, stat = "identity")
0:pie <- plt + coord_polar("y", start=0)
0:pie
0:runApp()
0:c$close_session()
0:c$logout()
0:runApp()
0:runApp()
0:View(datos)
0:c$close_session()
0:c$logout()
0:runApp()
0:runApp()
0:runApp()
0:dff
0:dff$per<-round(dff$Value/sum(dff$Value)*100, digits = 3)
0:dff$names_per <-paste(dff$Processor,dff$per,"%", sep = " ")
0:plt <- ggplot (dff, aes( x = "" ,  y = Value, fill = names_per)) + geom_bar(width = 1, stat = "identity")
0:pie <- plt + coord_polar("y", start=0)
0:pie
0:shiny::runApp()
0:runApp()
0:data<-datos
0:data$Period<-as.numeric(data$Period)
0:Scenarios <- as.vector(unique(data$Scenario))
0:Periods<- as.vector(unique(data$Period))
0:Processors<- as.vector(unique(data$Processor))
0:Interfaces<- as.vector(unique(data$Interface))
0:Scopes<- as.vector(unique(data$Scope))
0:Level <-as.vector(unique(data$Level))
0:Systems<- as.vector (unique(data$System))
0:Subsystems<-as.vector(unique(data$Subsystem))
0:Flow<- filter(data, data$RoegenType == "flow" | data$RoegenType == "Flow")
0:Fund<- filter(data, data$RoegenType == "Fund" | data$RoegenType == "fund")
0:FlowInterfaces<- as.vector(unique(Flow$Interface))
0:FundInterfaces <- as.vector(unique(Fund$Interface))
0:Periods
0:class(Periods)
0:df <- filter(data,data$Scenario == Scenario[1] & data$Period == Period[1]  & data$Interface == Interface[1], data$Scope == Scope[1])
0:df$per<-round(df$Value/sum(df$Value)*100, digits = 3)
0:df$names_per <-paste(df$Processor,df$per,"%", sep = " ")
0:plt <- ggplot (df, aes( x = "" ,  y = Value, fill = names_per)) + geom_bar(width = 1, stat = "identity")
0:pie <- plt + coord_polar("y", start=0)
0:pie
0:shiny::runApp()
0:runApp()
0:install.packages(c("backports", "BH", "biclust", "broom", "callr", "checkmate", "cli", "curl", "DBI", "digest", "dplyr", "DT", "ellipsis", "fansi", "farver", "feather", "ggplot2", "haven", "hexbin", "hms", "htmltools", "htmlwidgets", "httpuv", "httr", "jsonlite", "knitr", "later", "leaflet", "markdown", "mime", "modelr", "pillar", "pkgconfig", "plyr", "prettyunits", "processx", "promises", "purrr", "R6", "raster", "Rcpp", "rlang", "rmarkdown", "rstudioapi", "rvest", "selectr", "shiny", "sp", "stringi", "sys", "testthat", "tidyr", "tidyselect", "tidyverse", "tinytex", "vctrs", "whisker", "xfun", "XML", "xml2", "yaml"))
0:shiny::runApp()
0:??use_virtualenv
0:runApp()
0:runApp()
0:runApp()
0:runApp()
0:runApp()
0:runApp()
0:runApp()
0:runApp()
0:conda_list()
0:use_condaenv("anaconda3", required = TRUE)
0:nexinfosys <- import("nexinfosys")
0:nexinfosys <- import("nexinfosys")
0:conda_list()
0:runApp()
0:shiny::runApp()
0:nexinfosys <- import("nexinfosys")
0:runApp()
0:shiny::runApp()
0:rm(list = ls())
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library(dplyr)
0:library(ggplot2)
0:library(stringr)
0:library(rlist)
0:library(dplyr)
0:library(tidyr)
0:library("readxl")
0:library("collapsibleTree")
0:library(data.table)
0:library(excelR)
0:library("DT")
0:library(flexdashboard)
0:library("reticulate")
0:library(stringr)
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:use_condaenv("anaconda3", required = TRUE)
0:conda_list()
0:nexinfosys <- import("nexinfosys")
0:rm(list = ls())
0:setwd("~/Documentos/Shiny/Shiny-NIS2")
0:library(dplyr)
0:library(ggplot2)
0:library(stringr)
0:library(rlist)
0:library(dplyr)
0:library(tidyr)
0:library("readxl")
0:library("collapsibleTree")
0:library(data.table)
0:library(excelR)
0:library("DT")
0:library(flexdashboard)
0:library("reticulate")
0:library(stringr)
0:reticulate::use_python("/home/paula/anaconda3/bin/python", required = TRUE)
0:use_condaenv("anaconda3", required = TRUE)
0:conda_list()
0:nexinfosys <- import("nexinfosys")
0:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
1582021445256:library("reticulate")
1582021450855:nexinfosys <- import("nexinfosys")
1582021455443:N
1582021476587:c <- nexinfosys$NISClient("http://0.0.0.0:5000/nis_api")
1582021518231:shiny::runApp()
1582021550892:runApp()
1582021563098:runApp()
1582024131797:c <- nexinfosys$NISClient("https://one.nis.magic-nexus.eu/nis_api")
1582024140482:c$login("test_user")
1582024249913:runApp()
1582024517311:runApp()
1582024559390:runApp()
1582026130070:runApp()
1582026806968:runApp()
1582026934800:runApp()
1582026964298:runApp()
1582027014953:c$logout
1582027023064:c$logout()
1582027060732:runApp()
1582027106296:c$logout()
1582027216062:runApp()
1582027379996:c$logout()
1582027383962:runApp()
1582027494846:runApp()
1582028059298:runApp()
1582028235520:runApp()
1582028901771:runApp()
1582028951122:df
1582028957546:View(df)
1582029018734:View(eum)
1582029048290:head(eumflow)
1582029056903:head(eumfund)
1582029790243:runApp()
1582030037356:runApp()
1582031030127:runApp()
1582031252027:runApp()
1582031401158:runApp()
1582031441428:View(data)
1582031491341:runApp()
1582031770291:runApp()
1582032125306:runApp()
1582032234640:runApp()
1582035155202:runApp()
1582035291208:runApp()
1582035647538:runApp()
1582036199477:eum<-data.frame()
1582036227283:runApp()
1582036524899:runApp()
1582036564235:df
1582036600901:eumfund
1582036603567:runApp()
1582036637126:View(df)
1582036708653:runApp()
1582036982739:runApp()
1582037182291:runApp()
1582037210511:View(eumflow)
1582037356004:n
1582037360218:runApp()
1582037589612:runApp()
1582037748267:runApp()
1582037918676:runApp()
1582037988837:View(eum)
1582038018728:View(eumfund)
1582038117856:??merge
1582038136939:runApp()
1582039124537:runApp()
1582110306895:shiny::runApp()
1582110365485:c$logout()
1582110375194:runApp()
1582110454078:funds
1582110461336:class(funds)
1582110468712:length(funds)
1582110483931:for (i in funds) print(i)
1582117701474:runApp()
1582117981844:runApp()
1582123603973:runApp()
1582123691666:runApp()
1582123856321:runApp()
1582123952222:runApp()
1582124206936:runApp()
1582124340140:runApp()
1582124420198:View(df)
1582124446620:View(eum)
1582124610260:n
1582124610261:n
1582124610261:f
1582124610262:f
1582124610262:f
1582124610263:n
1582124610263:n
1582124610264:n
1582124610265:n
1582124610265:n
1582124610266:n
1582124610267:n
1582124610267:n
1582124610268:f
1582124610268:f
1582124610269:s
1582124610269:f
1582124610269:n
1582124610270:n
1582124610271:n
1582124610271:n
1582124610273:n
1582124610273:c
1582124610274:f
1582124610275:c
1582124785064:runApp()
1582124799537:runApp()
1582124882355:runApp()
1582124941111:runApp()
1582124979844:runApp()
1582125119447:runApp()
1582125176026:runApp()
1582125247206:runApp()
1582125350194:View(eumTotal)
1582125384914:View(tmp)
1582125393549:View(eum)
1582125739202:runApp()
1582125851236:runApp()
1582126073315:runApp()
1582127336475:runApp()
1582127471129:runApp()
1582127546144:runApp()
1582127595465:View(eumTotal)
1582127646395:View(eumTotal)
1582127733664:runApp()
1582128021553:runApp()
1582128143141:runApp()
1582128309390:runApp()
1582128399383:runApp()
1582128477161:eumTotal
1582128533387:eum
1582128578758:eumTotal
1582128655358:runApp()
1582128690098:View(eumTotal)
1582128722987:View(eumTmp)
1582128747139:View(eumTmp)
1582187644080:shiny::runApp()
1582187952161:View(eumTotal)
1582187956672:View(tmp)
1582187987144:View(eumTmp)
1582188145639:runApp()
1582188151964:runApp()
1582188157338:runApp()
1582188205878:View(eum)
1582188209640:View(eumTotal)
1582188236412:View(tmp)
1582188272227:View(eumTotal)
1582188404609:View(eumTmp)
1582188620425:eum$Level
1582188635868:eum['Level']
1582188703016:runApp()
1582188707122:runApp()
1582188945977:runApp()
1582189124801:runApp()
1582189174413:View(eumTotal)
1582189415830:eumTotal[,!(colnames(eumTotal) %in% c("Flow","Fund","Unit"))]%>%spread(indicator_Unit,value = Value)
1582189431506:View(eumTotal)
1582189575404:unique(eumTotal)
1582189594244:View(unique(eumTotal))
1582189664862:runApp()
1582189885038:runApp()
1582189980046:runApp()
1582190017298:View(eumTotal)
1582190066092:View(eumTotal)
1582190074760:View(eumTotal)
1582190136252:eumTotal[,!(colnames(eumTotal) %in% c("Flow","Fund","Unit"))]%>%spread(indicator_Unit,value = Value)
1582190142957:View(eumTotal)
1582190184658:eumTotal[,13]
1582190194576:eumTotal[:,13]
1582190206060:eumTotal[[13]]
1582190213394:eumTotal[,13]
1582190340312:runApp()
1582190344235:runApp()
1582190405844:View(eumTotal)
1582190465882:distinct(eumTotal)
1582190560563:eumTotal[!eumTotal(df), ]
1582190586494:eumTotal[!duplicated(eumTotal), ]
1582190636518:runApp()
1582190676409:View(eumTotal)
1582190727775:View(eumTotal)
1582190834943:runApp()
1582190840198:runApp()
1582190959733:View(totalEUM)
1582191022379:View(totalEUM)
1582191076682:View(totalEUM)
1582191348004:df<<-totalEUM
1582191798473:assign(totalEUM,totalEUM envir = .GlobalEnv)
1582191811185:assign(totalEUM,totalEUM, envir = .GlobalEnv)
1582191830721:View(totalEUM)
1582191833458:View(totalEUM)
1582191859117:View(totalEUM)
1582194092064:View(totalEUM)
1582195024769:runApp()
1582195038582:runApp()
1582195169961:runApp()
1582195192732:runApp()
1582195192754:runApp()
1582195294891:runApp()
1582195536419:runApp()
1582195572352:View(totalEUM)
1582196503653:runApp()
1582196577288:runApp()
1582196593691:runApp()
1582197029898:runApp()
1582197172817:runApp()
1582197617554:runApp()
1582198047369:runApp()
1582198602749:runApp()
1582199072018:runApp()
1582199221630:View(dfplot)
1582201225574:install.packages('rhandsontable')
1582202181161:runApp()
1582202212403:runApp()
1582202788255:runApp()
1582202857414:runApp()
1582202928145:runApp()
1582203117687:runApp()
1582203229027:runApp()
1582203296471:runApp()
1582203375134:runApp()
1582203671347:runApp()
1582272711509:shiny::runApp()
1582273556881:runApp()
1582274787199:runApp()
1582274858817:runApp()
1582275119108:runApp()
1582275216111:??selectInput
1582275323799:runApp()
1582275525798:runApp()
1582276085670:runApp()
1582276255928:runApp()
1582276458913:runApp()
1582276826224:runApp()
1582276923970:View(data)
1582277122129:filter(data, data$Scope == input$ScopeTree2,
1582277122131:data$Period == input$PeriodTree2, data$Interface ==
1582277122132:input$InterfaceTree2)
1582277674170:runApp()
1582284434007:runApp()
1582284674498:runApp()
1582284712857:View(eumTotal)
1582285368781:View(eumTotal)
1582286583568:runApp()
1582286660147:View(eum)
1582286936236:runApp()
1582286943541:runApp()
1582287243627:View(eum)
1582287299290:View(eum)
1582287383736:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","ID"))]%>%spread(indicator_Unit,value = Value)
1582287403079:View(eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","ID"))]%>%spread(indicator_Unit,value = Value))
1582287536596:View(eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","ID","indicator"))]%>%spread(indicator_Unit,value = Value))
1582287579135:runApp()
1582287699358:runApp()
1582288052069:runApp()
1582288103843:View(eum)
1582288156704:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","indicator"))]%>%spread(indicator_Unit,value = Value)
1582289511479:View(eum)
1582289525323:eum[duplicated(eum)]
1582289582628:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","indicator","Subsystem",Scope))]%>%spread(indicator_Unit,value = Value)
1582289590842:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","indicator","Subsystem","Scope"))]%>%spread(indicator_Unit,value = Value)
1582289861897:View(eum)
1582292021385:runApp()
1582292049791:runApp()
1582292091560:runApp()
1582292187875:runApp()
1582292219713:View(eum)
1582292277461:runApp()
1582292354940:View(eum)
1582292405964:View(eum)
1582292499517:View(eum)
1582292510912:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","indicator"))]%>%spread(indicator_Unit,value = Value)
1582292581134:duplicated(eum)
1582292742081:subset(eum, c(select, "Processor", "Level","Perdiod","Scope"))
1582292776339:subset(eum, select =  c("Processor", "Level","Perdiod","Scope"))
1582292784057:subset(eum, select =  c("Processor", "Level","Period","Scope"))
1582292989291:runApp()
1582293053372:runApp()
1582293146698:subset(eum, select =  c("Processor", "Level","Period","Scope", "Orientation"))
1582293189072:subset(eum, select =  c("Processor", "Level","Period","Scope", "Orientation"))
1582293211113:duplicated(subset(eum, select =  c("Processor", "Level","Period","Scope", "Orientation")))
1582293234719:duplicated(subset(eum, select =  c("Processor", "Level","Period","Scope", "Orientation",Scope)))
1582293241495:duplicated(subset(eum, select =  c("Processor", "Level","Period","Scope", "Orientation","Scope")))
1582293285298:runApp()
1582293298523:runApp()
1582293497282:View(eum)
1582293615011:runApp()
1582293764235:eum["Processor","Period", "Flow"]
1582293772105:eum
1582293783471:runApp()
1582293851892:View(eum)
1582293918909:unique(eum["Processor", "Flow","Period"])
1582293926504:eum
1582293939127:eum["Processor", "Flow","Period"]
1582293969278:uniqueN(eum[c("Processor", "Flow","Period")])
1582293975372:unique(eum[c("Processor", "Flow","Period")])
1582294070341:for (i in unique(eum[c("Processor", "Flow","Period")])){}
1582294079994:for (i in unique(eum[c("Processor", "Flow","Period")])){
1582294079996:}
1582294131761:for (i in unique(eum[c("Processor", "Flow","Period")])){
1582294131763:tmp <-data.frame()
1582294131764:}
1582708955733:shiny::runApp()
1582709167403:runApp()
1582709394581:runApp()
1582720200040:runApp()
1582720262747:View(eum)
1582720285444:View(eum)
1582720651587:View(eum)
1582720711055:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","indicator"))]%>%spread(indicator_Unit,value = Value)
1582720739453:View(eum)
1582720751908:View(eum)
1582720773563:eum[,!(colnames(eum) %in% c("Flow","Fund","Unit","indicator"))]%>%spread(indicator_Unit,value = Value)
1582720830632:View(eum)
1582720916559:runApp()
1582721057720:View(eum)
1582721167881:View(eum)
1582721183631:View(eum)
1582721907192:??gather
1582722177465:runApp()
1582722266399:runApp()
1582722316910:runApp()
1582722361273:runApp()
1582722472239:runApp()
1582722528836:data<-df_products_upload()
1582722528837:df_products_upload()
1582722552874:runApp()
1582722585953:data%>%spread(Orientation,value = Value)
1582722614386:View(data)
1582722909635:data[[1]]
1582722915921:data[1]
1582722929927:data[,1]
1582722988306:data[1,]
1582723003289:data[1:3]
1582723007051:data[1:3,]
1582723035718:data[152:154,]
1582724806777:data%>%spread(Orientation,value = Value)
1582724843906:data[155:157,]
1582724881011:data[306:308,]
1582725001121:sum(duplicated(data))
1582725087287:sum(duplicated(data[-c("Value")]))
1582725098888:sum(duplicated(data[-"Value"]))
1582725126854:subset(data, -c("Value"))
1582725163222:subset(data, select = -c("Value"))
1582725191235:subset(data, select = -Value)
1582725202687:duplicated(subset(data, select = -Value))
1582725218502:sum(duplicated(subset(data, select = -Value)))
1582725279493:table(subset(data, select = -Value))
1582725408599:table(subset(data, select = -Value))
1582730088962:runApp()
1582730198996:data%>%spread(Orientation,value = Value)
1582730219831:data<<-df_products_upload()
1582730266378:runApp()
1582730305929:runApp()
1582730354637:View(dat)
1582730381236:df<-dat%>%spread(Orientation,value = Value)
1582730386659:df
1582730401164:dat%>%spread(Orientation,value = Value)$
1582730962900:res<-try(dat%>%spread(Orientation,value = Value))
1582730968695:res
1582730970601:res
1582730996207:class(res)
1582731054836:??spread
1582807863790:shiny::runApp()
1582808125820:runApp()
